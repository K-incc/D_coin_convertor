{"version":3,"sources":["Components/Converter.js","App.js","index.js"],"names":["Converter","useState","currencies","base","amount","convertto","result","date","data","setData","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","maxWidth","title","fontSize","pos","marginBottom","roott","flexGrow","paper","padding","textAlign","color","palette","text","secondary","border","useStyles","handleSelect","e","target","name","value","useEffect","axios","get","then","response","rates","toFixed","catch","err","console","log","Typography","align","component","variant","Card","style","className","raised","CardContent","Grid","container","item","xs","FormControl","Paper","elevation","TextField","id","label","type","InputLabelProps","shrink","onChange","Select","native","inputProps","map","currency","key","paperr","disabled","onClick","SwapVert","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e5b7ecd.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {SwapVert} from '@material-ui/icons';\r\nimport axios from 'axios'\r\n\r\nconst Converter=()=>{\r\n\tconst [data,setData]=useState({\r\n\t\tcurrencies:['USD','AUD','SGD','EUR','PHP'],\r\n\t\tbase:'USD',\r\n\t\tamount:'',\r\n\t\tconvertto:'USD',\r\n\t\tresult:'',\r\n\t\tdate:''\r\n\t})\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n  \t\tformControl: {\r\n    \t\tmargin: theme.spacing(1),\r\n    \t\tminWidth: 120,\r\n  \t\t},\r\n  \t\tselectEmpty: {\r\n  \t\t  \tmarginTop: theme.spacing(2),\r\n  \t\t},\r\n  \t\troot: {\r\n    \t\tminWidth: 120,\r\n    \t\tmaxWidth: 400,\r\n  \t\t},\r\n  \t\ttitle: {\r\n  \t\t  \tfontSize: 14,\r\n  \t\t},\r\n  \t\tpos: {\r\n  \t\t  \tmarginBottom: 12,\r\n  \t\t},\r\n  \t\troott: {\r\n   \t\t  \tflexGrow: 1,\r\n  \t\t},\r\n  \t\tpaper: {\r\n  \t\t  \tpadding: theme.spacing(1),\r\n  \t\t  \ttextAlign: 'center',\r\n  \t\t  \tcolor: theme.palette.text.secondary,\r\n  \t\t  \tborder:0,\r\n  \t\t},\r\n  \t\t\r\n\t}));\r\n\r\n\r\n  \tconst classes = useStyles();\r\n \r\n\t\r\n\tconst handleInput=(e)=>{\r\n\t\tsetData({...data,[e.target.name]:e.target.value,\r\n\t\t\t\t\t\tresult:null})\r\n\t}\r\n\r\n\tconst handleSelect=(e)=>{\r\n\t\tsetData({...data,[e.target.name]:e.target.value,\r\n\t\t\t\t\t\tresult:null})\r\n\t}\r\n\r\n\r\n\tconst SwapCurr=()=>{\r\n\t\tsetData({...data,base:data.convertto,\r\n\t\t\t\t\t\tconvertto:data.base,\r\n\t\t\t\t\t\tresult:null})\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst convertCurr=()=>{\r\n\t\tconst amount=data.amount\r\n\t\tif (amount===''){\r\n\t\t\treturn\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\t   axios\r\n\t\t\t    .get(`https://api.exchangeratesapi.io/latest?base=${data.base}`)\r\n\t\t\t    .then(response=>{\r\n\t\t\t    \tconst date=response.data.date\r\n\t\t\t    \tconst result=(response.data.rates[data.convertto] * data.amount).toFixed(4)\r\n\r\n\t\t\t     \tsetData({...data,date:date,\r\n\t\t\t     \t\t\t\t\tresult:result})\r\n\t\t\t    })\r\n\t\t\t    .catch(err=>{\r\n\t\t\t      console.log(err)\r\n\t\t\t    })\r\n\t\t\t\t\t}\r\n\t}\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconvertCurr()\r\n  \t},[data.amount,data.base,data.convertto])\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Typography align=\"center\" component='div' variant='body1' >\r\n\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\tCurrency Converter\t\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Card style={{'margin':'auto'}} className={classes.root} raised variant=\"outlined\">\r\n\t      \t\t\t<CardContent>\r\n\t      \t\t\t\t<Typography variant=\"h5\">\r\n\t  \t\t\t\t\t\t{data.amount} {data.base} is equevalent to\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t\t\t{data.result} {data.convertto}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\t\tAs of {data.date}\r\n\t\t\t\t\t\t</Typography>\r\n\t        \r\n\t        \t\t\t<div className={classes.roott}>\r\n\t\t\t \t\t\t\t<Grid container >\r\n\t\t\t\t \t\t\t\t<Grid container item xs={10} >\r\n\t\t\t\t  \t\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\r\n\t\t\t\t \t\t\t\t\t\t<Grid container item xs={12} >\r\n\t\t        \t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t          \t\t\t\t\t\t\t\t<Paper elevation={0} className={classes.paper}>\r\n\t\t          \t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t \t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t         \t\t\t\t\t\t\t\t\tid=\"outlined-number\"\r\n\t\t         \t\t\t\t\t\t\t\t\tlabel=\"Convert from\"\r\n\t\t         \t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t         \t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t         \t\t\t\t\t\t\t\t\t   shrink: true,\r\n\t\t          \t\t\t\t\t\t\t\t\t}}\r\n\t\t          \t\t\t\t\t\t\t\t\tname='amount' value={data.amount} onChange={handleInput}\r\n\t\t        \t\t\t\t\t\t\t\t\t/>\r\n\t\t          \t\t\t\t\t\t\t\t</Paper>\r\n\t\t        \t\t\t\t\t\t\t</Grid>\r\n\t\t        \t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t          \t\t\t\t\t\t\t\t<Paper elevation={0} className={classes.paper}>\r\n\t\t            \t\t\t\t\t\t\t\t<Select\r\n\t\t          \t\t\t\t\t\t\t\t\tnative\r\n\t\t          \t\t\t\t\t\t\t\t\tvalue={data.base}\r\n\t\t          \t\t\t\t\t\t\t\t\tonChange={handleSelect}\r\n\t\t          \t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t          \t\t\t\t\t\t\t\t\t\tname: 'base',\r\n\t\t            \t\t\t\t\t\t\t\t\tid: 'outlined-age-native-simple',\r\n\t\t          \t\t\t\t\t\t\t\t\t}}\r\n\t\t        \t\t\t\t\t\t\t\t\t>\r\n\t\t     \t\t\t\t\t\t\t\t\t\t\t{data.currencies.map(currency=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={currency} key={currency}>{currency}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t        \t\t\t\t\t\t\t\t\t</Select>\r\n\t\t          \t\t\t\t\t\t\t\t</Paper>\r\n\t\t        \t\t\t\t\t\t\t</Grid>\r\n\t\t        \t\t\t\t\t\t</Grid>\r\n\t\t         \t\t\t\t\t</FormControl>\r\n\t\t      \t\t\t\t\t\t\r\n\t\t     \r\n\t\t      \r\n\t\t      \t\t\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\r\n\t\t      \t\t\t\t\t\t\t<Grid container item xs={12} >\r\n\t\t        \t\t\t\t\t\t\t<Grid className={classes.paperr} item xs={6}>\r\n\t\t          \t\t\t\t\t\t\t\t<Paper elevation={0} className={classes.paper}>\r\n\t\t          \t\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" disabled id=\"outlined-number\" label=\"Convert to\" type=\"text\" InputLabelProps={{shrink: true}} name='result' value={data.result===null ? 'Calculating...' : data.result}  />\r\n\t\t         \t\t\t\t\t\t\t\t </Paper>\r\n\t\t        \t\t\t\t\t\t\t</Grid>\r\n\t\t        \t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t          \t\t\t\t\t\t\t\t<Paper elevation={0} className={classes.paper}>\r\n\t\t            \t\t\t\t\t\t\t\t<Select\r\n\t\t         \t\t\t\t\t\t\t\t \tnative\r\n\t\t         \t\t\t\t\t\t\t\t \tvalue={data.convertto}\r\n\t\t         \t\t\t\t\t\t\t\t \tonChange={handleSelect}\r\n\t\t         \t\t\t\t\t\t\t\t \tinputProps={{\r\n\t\t            \t\t\t\t\t\t\t\t\tname: 'convertto',\r\n\t\t         \t\t\t\t\t\t\t\t   \t\tid: 'outlined-age-native-simple',\r\n\t\t         \t\t\t\t\t\t\t\t \t}}\r\n\t\t       \t\t\t\t\t\t\t\t \t\t>\t\t\t\t\t\t\t\t\r\n\t\t     \t\t\t\t\t\t\t\t\t\t\t{data.currencies.map(currency=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={currency} key={currency}>{currency}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t        \t\t\t\t\t\t\t\t\t</Select>\r\n\t\t          \t\t\t\t\t\t\t\t</Paper>\r\n\t\t        \t\t\t\t\t\t\t</Grid>\r\n\t\t      \t\t\t\t\t\t\t</Grid>\r\n\t\t      \t\t\t\t\t\t</FormControl>\r\n\t\t      \t\t\t\t\t</Grid>\r\n\t      \t\t\t\t\t\t<Grid container item xs={2} >\r\n\t      \t\t\t\t\t\t\t<button  style={{border:0}} onClick={SwapCurr}><SwapVert/></button>\r\n\t      \t\t\t\t\t\t</Grid>\r\n\t      \t\t\t\t\t</Grid>\r\n\t     \t\t\t\t </div>\r\n\t      \t\t\t</CardContent>\r\n\t    \t\t</Card>\r\n\t    \t</Typography>\t\r\n\t\t</>\r\n\t\t)\r\n}\r\n\r\nexport default Converter","import React from 'react'\nimport Converter from './Components/Converter'\n\nfunction App(){\n\treturn(\n\t\t\n\t\t\t<Converter/>\n\t\t\n\t\t)\n\t\t}\n\nexport default App\n\n","import ReactDom from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\n/*import './index.css'*/\n\nReactDom.render(<App/>,document.getElementById('root')) "],"sourceRoot":""}